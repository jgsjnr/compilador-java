// Generated from .\A3.g4 by ANTLR 4.13.0
 
    import java.util.*;
    import java.io.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class A3Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, SOMA=5, INICIO=6, FIM=7, OPREL=8, COMENTARIO=9, 
		OP_ATR=10, WHILE=11, DO=12, PARA=13, SE=14, SENAO=15, AC=16, FC=17, AP=18, 
		FP=19, PV=20, ID=21, VL=22, WS=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "SOMA", "INICIO", "FIM", "OPREL", "COMENTARIO", 
			"OP_ATR", "WHILE", "DO", "PARA", "SE", "SENAO", "AC", "FC", "AP", "FP", 
			"PV", "ID", "VL", "WS", "AZMIN", "AZMAI", "DIGIT", "WHITESPACE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'normal'", "'letra'", "'quebrado'", "'ideia'", "'+'", "'inicio'", 
			"'fim'", null, "'//'", "'='", "'enquanto'", "'do'", "'para'", "'se'", 
			"'senao'", "'{'", "'}'", "'('", "')'", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, "SOMA", "INICIO", "FIM", "OPREL", "COMENTARIO", 
			"OP_ATR", "WHILE", "DO", "PARA", "SE", "SENAO", "AC", "FC", "AP", "FP", 
			"PV", "ID", "VL", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	 
	    ControleVariavel cv = new ControleVariavel();
	    Saida w = new Saida(cv);


	public A3Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "A3.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00b5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0003\u0007j\b\u0007\u0001\b\u0001\b\u0001\b"+
		"\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f"+
		"\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0004\u0014\u0096\b\u0014\u000b\u0014"+
		"\f\u0014\u0097\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0005\u0014"+
		"\u009e\b\u0014\n\u0014\f\u0014\u00a1\t\u0014\u0001\u0015\u0001\u0015\u0003"+
		"\u0015\u00a5\b\u0015\u0001\u0016\u0004\u0016\u00a8\b\u0016\u000b\u0016"+
		"\f\u0016\u00a9\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018"+
		"\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0000\u0000"+
		"\u001b\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017"+
		"/\u00001\u00003\u00005\u0000\u0001\u0000\u0005\u0002\u0000<<>>\u0001\u0000"+
		"az\u0001\u0000AZ\u0001\u000009\u0003\u0000\t\n\r\r  \u00bb\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u00017\u0001\u0000\u0000"+
		"\u0000\u0003>\u0001\u0000\u0000\u0000\u0005D\u0001\u0000\u0000\u0000\u0007"+
		"M\u0001\u0000\u0000\u0000\tS\u0001\u0000\u0000\u0000\u000bU\u0001\u0000"+
		"\u0000\u0000\r\\\u0001\u0000\u0000\u0000\u000fi\u0001\u0000\u0000\u0000"+
		"\u0011k\u0001\u0000\u0000\u0000\u0013n\u0001\u0000\u0000\u0000\u0015p"+
		"\u0001\u0000\u0000\u0000\u0017y\u0001\u0000\u0000\u0000\u0019|\u0001\u0000"+
		"\u0000\u0000\u001b\u0081\u0001\u0000\u0000\u0000\u001d\u0084\u0001\u0000"+
		"\u0000\u0000\u001f\u008a\u0001\u0000\u0000\u0000!\u008c\u0001\u0000\u0000"+
		"\u0000#\u008e\u0001\u0000\u0000\u0000%\u0090\u0001\u0000\u0000\u0000\'"+
		"\u0092\u0001\u0000\u0000\u0000)\u0095\u0001\u0000\u0000\u0000+\u00a4\u0001"+
		"\u0000\u0000\u0000-\u00a7\u0001\u0000\u0000\u0000/\u00ad\u0001\u0000\u0000"+
		"\u00001\u00af\u0001\u0000\u0000\u00003\u00b1\u0001\u0000\u0000\u00005"+
		"\u00b3\u0001\u0000\u0000\u000078\u0005n\u0000\u000089\u0005o\u0000\u0000"+
		"9:\u0005r\u0000\u0000:;\u0005m\u0000\u0000;<\u0005a\u0000\u0000<=\u0005"+
		"l\u0000\u0000=\u0002\u0001\u0000\u0000\u0000>?\u0005l\u0000\u0000?@\u0005"+
		"e\u0000\u0000@A\u0005t\u0000\u0000AB\u0005r\u0000\u0000BC\u0005a\u0000"+
		"\u0000C\u0004\u0001\u0000\u0000\u0000DE\u0005q\u0000\u0000EF\u0005u\u0000"+
		"\u0000FG\u0005e\u0000\u0000GH\u0005b\u0000\u0000HI\u0005r\u0000\u0000"+
		"IJ\u0005a\u0000\u0000JK\u0005d\u0000\u0000KL\u0005o\u0000\u0000L\u0006"+
		"\u0001\u0000\u0000\u0000MN\u0005i\u0000\u0000NO\u0005d\u0000\u0000OP\u0005"+
		"e\u0000\u0000PQ\u0005i\u0000\u0000QR\u0005a\u0000\u0000R\b\u0001\u0000"+
		"\u0000\u0000ST\u0005+\u0000\u0000T\n\u0001\u0000\u0000\u0000UV\u0005i"+
		"\u0000\u0000VW\u0005n\u0000\u0000WX\u0005i\u0000\u0000XY\u0005c\u0000"+
		"\u0000YZ\u0005i\u0000\u0000Z[\u0005o\u0000\u0000[\f\u0001\u0000\u0000"+
		"\u0000\\]\u0005f\u0000\u0000]^\u0005i\u0000\u0000^_\u0005m\u0000\u0000"+
		"_\u000e\u0001\u0000\u0000\u0000`j\u0007\u0000\u0000\u0000ab\u0005>\u0000"+
		"\u0000bj\u0005=\u0000\u0000cd\u0005<\u0000\u0000dj\u0005=\u0000\u0000"+
		"ef\u0005=\u0000\u0000fj\u0005=\u0000\u0000gh\u0005!\u0000\u0000hj\u0005"+
		"=\u0000\u0000i`\u0001\u0000\u0000\u0000ia\u0001\u0000\u0000\u0000ic\u0001"+
		"\u0000\u0000\u0000ie\u0001\u0000\u0000\u0000ig\u0001\u0000\u0000\u0000"+
		"j\u0010\u0001\u0000\u0000\u0000kl\u0005/\u0000\u0000lm\u0005/\u0000\u0000"+
		"m\u0012\u0001\u0000\u0000\u0000no\u0005=\u0000\u0000o\u0014\u0001\u0000"+
		"\u0000\u0000pq\u0005e\u0000\u0000qr\u0005n\u0000\u0000rs\u0005q\u0000"+
		"\u0000st\u0005u\u0000\u0000tu\u0005a\u0000\u0000uv\u0005n\u0000\u0000"+
		"vw\u0005t\u0000\u0000wx\u0005o\u0000\u0000x\u0016\u0001\u0000\u0000\u0000"+
		"yz\u0005d\u0000\u0000z{\u0005o\u0000\u0000{\u0018\u0001\u0000\u0000\u0000"+
		"|}\u0005p\u0000\u0000}~\u0005a\u0000\u0000~\u007f\u0005r\u0000\u0000\u007f"+
		"\u0080\u0005a\u0000\u0000\u0080\u001a\u0001\u0000\u0000\u0000\u0081\u0082"+
		"\u0005s\u0000\u0000\u0082\u0083\u0005e\u0000\u0000\u0083\u001c\u0001\u0000"+
		"\u0000\u0000\u0084\u0085\u0005s\u0000\u0000\u0085\u0086\u0005e\u0000\u0000"+
		"\u0086\u0087\u0005n\u0000\u0000\u0087\u0088\u0005a\u0000\u0000\u0088\u0089"+
		"\u0005o\u0000\u0000\u0089\u001e\u0001\u0000\u0000\u0000\u008a\u008b\u0005"+
		"{\u0000\u0000\u008b \u0001\u0000\u0000\u0000\u008c\u008d\u0005}\u0000"+
		"\u0000\u008d\"\u0001\u0000\u0000\u0000\u008e\u008f\u0005(\u0000\u0000"+
		"\u008f$\u0001\u0000\u0000\u0000\u0090\u0091\u0005)\u0000\u0000\u0091&"+
		"\u0001\u0000\u0000\u0000\u0092\u0093\u0005;\u0000\u0000\u0093(\u0001\u0000"+
		"\u0000\u0000\u0094\u0096\u0003/\u0017\u0000\u0095\u0094\u0001\u0000\u0000"+
		"\u0000\u0096\u0097\u0001\u0000\u0000\u0000\u0097\u0095\u0001\u0000\u0000"+
		"\u0000\u0097\u0098\u0001\u0000\u0000\u0000\u0098\u009f\u0001\u0000\u0000"+
		"\u0000\u0099\u009e\u0003/\u0017\u0000\u009a\u009e\u00031\u0018\u0000\u009b"+
		"\u009e\u00033\u0019\u0000\u009c\u009e\u0005_\u0000\u0000\u009d\u0099\u0001"+
		"\u0000\u0000\u0000\u009d\u009a\u0001\u0000\u0000\u0000\u009d\u009b\u0001"+
		"\u0000\u0000\u0000\u009d\u009c\u0001\u0000\u0000\u0000\u009e\u00a1\u0001"+
		"\u0000\u0000\u0000\u009f\u009d\u0001\u0000\u0000\u0000\u009f\u00a0\u0001"+
		"\u0000\u0000\u0000\u00a0*\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a5\u0003)\u0014\u0000\u00a3\u00a5\u00033\u0019\u0000"+
		"\u00a4\u00a2\u0001\u0000\u0000\u0000\u00a4\u00a3\u0001\u0000\u0000\u0000"+
		"\u00a5,\u0001\u0000\u0000\u0000\u00a6\u00a8\u00035\u001a\u0000\u00a7\u00a6"+
		"\u0001\u0000\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00a7"+
		"\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000\u0000\u00aa\u00ab"+
		"\u0001\u0000\u0000\u0000\u00ab\u00ac\u0006\u0016\u0000\u0000\u00ac.\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0007\u0001\u0000\u0000\u00ae0\u0001\u0000"+
		"\u0000\u0000\u00af\u00b0\u0007\u0002\u0000\u0000\u00b02\u0001\u0000\u0000"+
		"\u0000\u00b1\u00b2\u0007\u0003\u0000\u0000\u00b24\u0001\u0000\u0000\u0000"+
		"\u00b3\u00b4\u0007\u0004\u0000\u0000\u00b46\u0001\u0000\u0000\u0000\u0007"+
		"\u0000i\u0097\u009d\u009f\u00a4\u00a9\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}